plugins {
    id "com.github.johnrengelman.shadow" version "5.0.0"
}

configurations {
    shadow
}

architectury {
    platformSetupLoomIde()
    forge()
}

loom {
    accessWidenerPath = project(":common").loom.accessWidenerPath
    forge {
        convertAccessWideners = true
        extraAccessWideners.add loom.accessWidenerPath.get().asFile.name
        mixinConfig "mixins.simpleauth.json"

    }

    // Enable this for yarn to work
    //useFabricMixin = true


}

dependencies {
    forge "net.minecraftforge:forge:${rootProject.minecraft_version}-${rootProject.forge_version}"

    implementation(project(path: ":common")) {
        transitive = false
    }
    developmentForge(project(path: ":common")) {
        transitive = false
    }
    shadow(project(path: ":common", configuration: "transformProductionForge")) {
        transitive = false
    }

    // Password hashing
    // Argon2
    shadow "de.mkammerer:argon2-jvm:${argon2_version}"

    // BCrypt
    shadow "at.favre.lib:bcrypt:${bcrypt_version}"
    shadow "at.favre.lib:bytes:${bytes_version}"

    // Storage
    // leveldb
    shadow group: 'org.iq80.leveldb', name: 'leveldb', version: '0.12'
    shadow group: 'org.iq80.leveldb', name: 'leveldb-api', version: '0.12'

    // JNA lib
    shadow 'net.java.dev.jna:jna:5.5.0'
}

shadowJar {
    exclude "fabric.mod.json"

    configurations = [project.configurations.shadow]
    classifier "shadow"
}

remapJar {
    dependsOn(shadowJar)
    input.set(shadowJar.archivePath)
    archiveClassifier = "forge"
}

jar {
    manifest {
        attributes([
                "MixinConfigs": "mixins.simpleauth.json",
        ])
    }
}